@model dynamic

@{
    ViewBag.Title = "title";
}

<h1>Average Cycle Time</h1>
<div id="spinner"></div>
<div id="chart" class="chartDiv">
    <svg style="height: 450px; width: 900px"></svg>
</div>

@section Scripts
{
    <script type="text/javascript">
        var opts = {
            lines: 13, // The number of lines to draw
            length: 20, // The length of each line
            width: 10, // The line thickness
            radius: 30, // The radius of the inner circle
            corners: 1, // Corner roundness (0..1)
            rotate: 0, // The rotation offset
            direction: 1, // 1: clockwise, -1: counterclockwise
            color: '#000', // #rgb or #rrggbb or array of colors
            speed: 1, // Rounds per second
            trail: 60, // Afterglow percentage
            shadow: false, // Whether to render a shadow
            hwaccel: false, // Whether to use hardware acceleration
            className: 'spinner', // The CSS class to assign to the spinner
            zIndex: 2e9, // The z-index (defaults to 2000000000)
            top: '50%', // Top position relative to parent
            left: '50%' // Left position relative to parent
        };
        var target = document.getElementById('spinner');
        var spinner = new Spinner(opts).spin(target);

        $(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action(MVC.CycleTime.GetData())",
                success: function (data) {
                    createChart(data);
                    spinner.stop();
                }
            });

        });
        
        function createChart(data) {
            nv.addGraph(function () {
                var chart = nv.models.discreteBarChart()
                        .staggerLabels(true)    //Too many bars and not enough room? Try staggering labels.
                        .tooltips(false)        //Don't show tooltips
                        .showValues(true)       //...instead, show the bar value right on top of each bar.
                        .transitionDuration(350).options({
                            margin: { left: 100, bottom: 100 },
                            showXAxis: true,
                            showYAxis: true
                        })
                    ;

                chart.xAxis
                    .axisLabel("Effort (Story points)");

                chart.yAxis
                    .axisLabel('Work Days');

                d3.select('#chart svg')
                    .datum(data)
                    .call(chart);

                nv.utils.windowResize(chart.update);

                return chart;
            });
        }

    </script>
}
